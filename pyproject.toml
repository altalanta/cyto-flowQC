[build-system]
requires = ["setuptools>=68", "setuptools_scm>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cytoflow-qc"
dynamic = ["version"]
description = "Automated QC and gating pipeline for flow cytometry data"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "CytoFlow-QC Team" }
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dependencies = [
    "flowkit>=0.9.0",
    "flowutils>=0.1.0",
    "fcsparser>=0.2.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.2.0",
    "statsmodels>=0.14.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "typer>=0.9.0",
    "jinja2>=3.1.0",
    "umap-learn>=0.5.0",
    "nbconvert>=7.0.0",
    "snakemake>=7.0.0",
    "pyyaml>=6.0",
    "streamlit>=1.28.0",
    "plotly>=5.17.0",
    "bokeh>=3.3.0",
    "altair>=5.1.0",
    "seaborn>=0.12.0",
    "kaleido>=0.2.1",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.0.0",
    "hypothesis>=6.0.0",
    "mutmut>=2.0.0",
    "faker>=19.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
    "mypy>=1.0.0",
]
cloud = [
    "boto3>=1.28.0",
    "google-cloud-storage>=2.11.0",
]

[project.scripts]
cytoflow-qc = "cytoflow_qc.cli:app"

[tool.setuptools.packages.find]
where = ["src"]
include = ["cytoflow_qc*"]

[tool.setuptools_scm]
write_to = "src/cytoflow_qc/_version.py"
write_to_template = "__version__ = \"{version}\"\n"
fallback_version = "0.1.0"

[tool.pytest.ini_options]
addopts = "-ra --strict-markers --strict-config --cov=cytoflow_qc --cov-report=term-missing"
testpaths = ["tests"]
filterwarnings = [
    "error::DeprecationWarning",
    "ignore::UserWarning:sklearn",
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "benchmark: marks tests as performance benchmarks (deselect with '-m \"not benchmark\"')",
    "property: marks tests as property-based tests (deselect with '-m \"not property\"')",
]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "UP", "PL", "W"]
ignore = ["E203", "B008", "PLR0913", "PLR0912"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.isort]
known-first-party = ["cytoflow_qc"]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
strict = true
mypy_path = "src"

[tool.coverage.run]
branch = true
source = ["cytoflow_qc"]

[tool.coverage.report]
skip_covered = true
show_missing = true
precision = 2
fail_under = 80